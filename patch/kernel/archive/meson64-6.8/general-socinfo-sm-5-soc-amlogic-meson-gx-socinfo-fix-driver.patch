From 3f7a6fafdc8379463d861c2fee0d9ecfff264427 Mon Sep 17 00:00:00 2001
From: Viacheslav Bocharov <adeep@lexina.in>
Date: Wed, 29 May 2024 10:39:49 +0300
Subject: [PATCH 5/6] soc: amlogic: meson-gx-socinfo: fix driver

---
 .../soc/amlogic/meson-gx-socinfo-internal.h   | 14 +++++--
 drivers/soc/amlogic/meson-gx-socinfo-sm.c     | 40 +++++++++----------
 2 files changed, 30 insertions(+), 24 deletions(-)

diff --git a/drivers/soc/amlogic/meson-gx-socinfo-internal.h b/drivers/soc/amlogic/meson-gx-socinfo-internal.h
index 2028101bb9b2..cee9fae805e9 100644
--- a/drivers/soc/amlogic/meson-gx-socinfo-internal.h
+++ b/drivers/soc/amlogic/meson-gx-socinfo-internal.h
@@ -33,10 +33,16 @@ union meson_cpu_id {
 	u32	raw;
 };
 
-struct meson_sm_chip_id {
-	u32 version;
-	union meson_cpu_id cpu_id;
-	u8 serial[12];
+union meson_sm_chip_id {
+	struct { // cpu_id v2
+		u32 version;
+		union meson_cpu_id cpu_id;
+		u8 serial[12];
+	} v2;
+	struct { // raw
+		u32 version;
+		u8 buf[12+sizeof(union meson_cpu_id)];
+	} raw;
 };
 
 static const struct meson_gx_soc_id {
diff --git a/drivers/soc/amlogic/meson-gx-socinfo-sm.c b/drivers/soc/amlogic/meson-gx-socinfo-sm.c
index 081519ca3089..5e6cbd644b28 100644
--- a/drivers/soc/amlogic/meson-gx-socinfo-sm.c
+++ b/drivers/soc/amlogic/meson-gx-socinfo-sm.c
@@ -25,51 +25,51 @@ static char *socinfo_get_chipid(struct device *dev, struct meson_sm_firmware *fw
 			       union meson_cpu_id *socinfo)
 {
 	char *buf;
-	struct meson_sm_chip_id *id_buf;
+	union meson_sm_chip_id *id_buf;
 	int ret;
 
-	id_buf = kzalloc(sizeof(struct meson_sm_chip_id)+1, GFP_KERNEL);
+	id_buf = kzalloc(sizeof(union meson_sm_chip_id)+1, GFP_KERNEL);
 	if (!id_buf)
 		return NULL;
 
-	ret = meson_sm_call_read(fw, id_buf, sizeof(struct meson_sm_chip_id), SM_GET_CHIP_ID,
+	ret = meson_sm_call_read(fw, id_buf, sizeof(union meson_sm_chip_id), SM_GET_CHIP_ID,
 				 2, 0, 0, 0, 0);
 	if (ret < 0) {
 		kfree(id_buf);
 		return NULL;
 	}
-	dev_info(dev, "got sm version call %i\n", id_buf->version);
+	dev_info(dev, "got sm version call %i\n", id_buf->raw.version);
 
-	if (id_buf->version != 2) {
+	if (id_buf->raw.version != 2) {
 
 		u8 tmp;
 		/**
 		 * Legacy 12-byte chip ID read out, transform data
 		 * to expected order format
 		 */
-		memmove((void *)&id_buf->serial, (void *)&id_buf->cpu_id, 12);
+		memmove((void *)&id_buf->v2.serial, (void *)&id_buf->raw.buf, 12);
 		for (int i = 0; i < 6; i++) {
-			tmp = id_buf->serial[i];
-			id_buf->serial[i] = id_buf->serial[11 - i];
-			id_buf->serial[11 - i] = tmp;
+			tmp = id_buf->v2.serial[i];
+			id_buf->v2.serial[i] = id_buf->v2.serial[11 - i];
+			id_buf->v2.serial[11 - i] = tmp;
 		}
-		id_buf->cpu_id.v2.major_id = socinfo->v1.major_id;
-		id_buf->cpu_id.v2.pack_id = socinfo->v1.pack_id;
-		id_buf->cpu_id.v2.chip_rev = socinfo->v1.chip_rev;
-		id_buf->cpu_id.v2.reserved = socinfo->v1.reserved;
-		id_buf->cpu_id.v2.layout_ver = socinfo->v1.layout_ver;
+		id_buf->v2.cpu_id.v2.major_id = socinfo->v1.major_id;
+		id_buf->v2.cpu_id.v2.pack_id = socinfo->v1.pack_id;
+		id_buf->v2.cpu_id.v2.chip_rev = socinfo->v1.chip_rev;
+		id_buf->v2.cpu_id.v2.reserved = socinfo->v1.reserved;
+		id_buf->v2.cpu_id.v2.layout_ver = socinfo->v1.layout_ver;
 	} else {
 		/**
 		 * rewrite socinfo from regmap with value from secure monitor call
 		 */
-		socinfo->v1.major_id = id_buf->cpu_id.v2.major_id;
-		socinfo->v1.pack_id = id_buf->cpu_id.v2.pack_id;
-		socinfo->v1.chip_rev = id_buf->cpu_id.v2.chip_rev;
-		socinfo->v1.reserved = id_buf->cpu_id.v2.reserved;
-		socinfo->v1.layout_ver = id_buf->cpu_id.v2.layout_ver;
+		socinfo->v1.major_id = id_buf->v2.cpu_id.v2.major_id;
+		socinfo->v1.pack_id = id_buf->v2.cpu_id.v2.pack_id;
+		socinfo->v1.chip_rev = id_buf->v2.cpu_id.v2.chip_rev;
+		socinfo->v1.reserved = id_buf->v2.cpu_id.v2.reserved;
+		socinfo->v1.layout_ver = id_buf->v2.cpu_id.v2.layout_ver;
 	}
 
-	buf = kasprintf(GFP_KERNEL, "%4phN%12phN", &(id_buf->cpu_id), &(id_buf->serial));
+	buf = devm_kasprintf(dev, GFP_KERNEL, "%4phN%12phN", &(id_buf->v2.cpu_id), &(id_buf->v2.serial));
 
 	kfree(id_buf);
 
-- 
2.45.1

